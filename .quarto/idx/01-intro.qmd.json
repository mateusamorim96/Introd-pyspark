{"title":"Preface","markdown":{"headingText":"Preface","containsRefs":false,"markdown":"\n\n\n\n\nIn essence, `pyspark` is a python package that provides an API for Apache Spark. In other words, with `pyspark` you are able to use the python language to write Spark applications and run them on a Spark cluster in a scalable and elegant way. This book focus on teaching the fundamentals of `pyspark`, and how to use it for big data analysis.\n\nThis book, also contains a small introduction to key python concepts that are important to understand how `pyspark` is organized and how it works in practice, and, since we will be using Spark under the hood, is very important to understand a little bit of how Spark works, so, we provide a small introduction to Spark as well.\n\nBig part of the knowledge exposed here is extracted from a lot of practical experience of the author, working with `pyspark` to analyze big data at platforms such as Databricks^[https://databricks.com/].\n\n\n\n\n## Some conventions of this book\n\n\nThis book is about `pyspark`, which is a python package. As a result, we will be exposing a lot of python code across the entire book. Examples of python code, are always shown inside a gray rectangle, like this example below.\n\nEvery visible result that this python code produce, will be shown outside of the gray rectangle, just below the command that produced that visible result. Besides that, every line of result will always be written in plain black. So in the example below, the value `729` is the only visible result of this python code, and, the statement `print(y)` is the command that triggered this visible result.\n\n```{python}\nx = 3\ny = 9 ** x\n\nprint(y)\n```\n\n\nFurthermore, all terminal commands that we expose in this book, will always be: pre-fixed by `Terminal$`; written in black; and, not outlined by a gray rectangle. In the example below, we can easily detect that this command `pip install jupyter` should be inserted in the terminal of the OS (whatever is the terminal that your OS uses), and not in the python interpreter, because this command is prefixed with `Terminal$`.\n\n```{verbatim}\nTerminal$ pip install jupyter\n```\n\nSome terminal commands may produce visible results as well. In that case, these results will be right below the respective command, and will not be pre-fixed with `Terminal$`. For example, we can see below that the command `echo \"Hello!\"` produces the result `\"Hello!\"`.\n\n```{verbatim}\nTerminal$ echo \"Hello!\"\n\"Hello!\"\n```\n\nWhen I refer to some python object, function, method or package, I will use a monospaced font. In other words, if I have a python object called \"name\", and, I am describing this object, I will use `name` in the paragraph, and not \"name\".\n\n\n## First step: install the necessary software {#sec-install-software}\n\nBefore we start, is really important that you have all the software you need already installed on your machine and ready to go. `Spark` and, as a result, `pyspark`, are both available for Windows and UNIX-like systems (e.g. Linux and MacOs). \n\nInstall and manage `spark` in Windows is a little harder than in a UNIX-like machine. But it's perfectly ok if do not have a UNIX machine. A Windows machine will do it just fine. Just for referencing, the examples showed throughout this book were executed in a Linux machine (more specifically, in Ubuntu).\n\nSo, to use `pyspark` you need to install: 1) a `Spark` distribution; 2) and, the python package called `pyspark`. Installing the `pyspark` python package is pretty straightforward. Just open a terminal, and use the `pip` command to do it:\n\n\n```{verbatim}\nTerminal$ pip install pyspark\n```\n\nIf you are in Windows, this would mean: open the `cmd.exe` (or \"Command Prompt\") terminal, and, run the above command. But, if a message like `pip: command not found` appears, this means that you do not have the `pip` tool installed on your Windows. Hence, if you face this kind of message, you need to install `pip` before you even install `pyspark`.\n\nIn contrast, if you are running on a Linux or MacOs machine, you need to open a `bash` terminal (most distros of Linux can open a terminal by pressing the `Ctrl+Alt+T` shortcut on the keyboard), and, run the exact same command above. Again, if a message like `pip: command not found` appears, it means that `pip` is not installed on your system. \n\nIn UNIX-like systems, installing `pip` is even easier, because you can use the built-in package manager to do this for you. In Debian like distros (e.g. Ubuntu), you use the `apt` tool, and, in Arch-Linux like distros (e.g. Arch Linux, Manjaro) you would use the `pacman` tool. Both possibilities are exposed below:\n\n```{verbatim}\n# If you are in a Debian like distro of Linux\n# and need to install `pip`, use this command:\nTerminal$ apt install python3-pip\n# If you are in a Arch-Linux like distro of Linux\n# and need to install `pip`, use this command:\nTerminal$ pacman -S python-pip\n```\n\nBut, if you are running in MacOs, is best to use the `get-pip.py` method to do install `pip`^[See the following discussion: https://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x]. To use this method, try to run the command below on the terminal. After you installed pip, run the same `pip` command we showed earlier to install `pyspark`.\n\n```{verbatim}\n# To install `pip` on a MacOs:\nTerminal$ curl https://bootstrap.pypa.io/get-pip.py | python3\n```\n\n\n\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","number-sections":true,"output-file":"01-intro.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"0.9.393","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}}}